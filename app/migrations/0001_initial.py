# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2017-12-09 19:20
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(help_text='Required. 30 characters or fewer. Letters, numbers and @/./+/-/_ characters', max_length=30, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$', 32), 'Enter a valid username.', 'invalid')], verbose_name='username')),
                ('full_name', models.CharField(max_length=254, verbose_name='full name')),
                ('short_name', models.CharField(blank=True, max_length=30, verbose_name='short name')),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=30, verbose_name='sex')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(re.compile('^[0-9]+$', 32), 'Only numbers are allowed.', 'invalid')], verbose_name='phone number')),
                ('user_type', models.CharField(choices=[('Driver', 'Driver'), ('Passenger', 'Passenger')], max_length=30, verbose_name='user type')),
                ('address', models.TextField(max_length=400, verbose_name='location')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_verified', models.BooleanField(default=False, help_text='Designates whether the user is a vershified user', verbose_name='user verified')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DriverInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liscence_no', models.CharField(max_length=30, verbose_name='liscence number')),
                ('date_issuance', models.DateField(blank=True, verbose_name='date of first issuance')),
                ('scanned', models.ImageField(blank=True, upload_to='', verbose_name="picture of driver's liscence")),
                ('confirmed', models.BooleanField(default=False, verbose_name='confirmed')),
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='time')),
                ('followee', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='followee', to=settings.AUTH_USER_MODEL)),
                ('follower', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='follower', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(default='(No Subject)', max_length=256)),
                ('message', models.TextField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='time sent')),
                ('read', models.BooleanField(default=False, verbose_name='read')),
                ('deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipient', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.FileField(blank=True, default='user.png', upload_to='')),
                ('education', models.TextField(blank=True)),
                ('work', models.TextField(blank=True)),
                ('social_facebook', models.CharField(blank=True, max_length=256)),
                ('social_twitter', models.CharField(blank=True, max_length=256)),
                ('social_instagram', models.CharField(blank=True, max_length=256)),
                ('bio', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pick', models.CharField(max_length=256, verbose_name='pick up point')),
                ('dest', models.CharField(max_length=256, verbose_name='destination')),
                ('reg_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='registration date')),
                ('bearable', models.IntegerField(verbose_name='bearable cost')),
                ('status', models.CharField(default='pending', max_length=256, verbose_name='status')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(verbose_name='year of purchase')),
                ('make', models.CharField(max_length=254, verbose_name='vehicle make')),
                ('plate', models.CharField(max_length=10, verbose_name='liscenced plate number')),
                ('model', models.CharField(max_length=254, verbose_name='vehicle model')),
                ('seats', models.IntegerField(verbose_name='no of seats')),
                ('type', models.CharField(choices=[('private', 'private'), ('hired', 'hired')], max_length=30, verbose_name='vehicle type')),
                ('category', models.CharField(choices=[('Car', 'Car'), ('Bus', 'Bus'), ('Coaster', 'Coaster'), ('Truck', 'Truck')], max_length=30, verbose_name='vehicle category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleSharing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.CharField(max_length=256, verbose_name='starting point')),
                ('dest', models.CharField(max_length=256, verbose_name='destination')),
                ('cost', models.IntegerField(verbose_name='cost')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='date')),
                ('start_time', models.TimeField(max_length=256, verbose_name='start time')),
                ('arrival_time', models.TimeField(max_length=256, verbose_name='estimated arrivak')),
                ('no_pass', models.IntegerField(verbose_name='no of passengers')),
                ('details', models.TextField(verbose_name='ride details')),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Both', 'Both')], max_length=30, verbose_name='gender preference')),
                ('ended', models.BooleanField(default=False, verbose_name='sharing ended')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Vehicle')),
            ],
        ),
        migrations.AddField(
            model_name='request',
            name='ride',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.VehicleSharing'),
        ),
        migrations.AddField(
            model_name='request',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
